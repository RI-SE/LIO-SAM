/**:
  ros__parameters:

    # Topics
    # pointCloudTopic: "/CombinedCloud"          # Point cloud data
    pointCloudTopic: "/velodyne_points"          # Point cloud data
    imuTopic: "/ins/imu"         # IMU data

    odomTopic: "/ins/odometry_vehicle"                   # IMU pre-preintegration odometry, same frequency as IMU
    gpsTopic: "/ins/odometry_vehicle"                    # GPS odometry topic from navsat, see module_navsat.launch file 

    useDownSampling: true                      # Set to false to disable all downsampling of scans

    # Frames
    lidarFrame: "velodyne"
    baselinkFrame: "base_link"
    odometryFrame: "odom"
    mapFrame: "map"

    # GPS Settings
    useImuHeadingInitialization: true           # if using GPS data, set to "true"
    useGpsElevation: true                       # if GPS elevation is bad, set to "false"
    gpsDistThreshold: 0.05                      # Distance threshold [m] (between two gps measurements) deciding if the new GPS position should be included in the gtsam graph
    gpsCovThreshold: 2.0                        # If GPS noise is greater than this threshold, discard
    poseCovThreshold: 0.02                       # If Pose is further away from GPS than this threshold, correct
    
    # Export settings
    savePCD: false                               
    savePCDDirectory: "/Downloads/LOAM/"        # in your home folder, starts and ends with "/". Warning: the code deletes "LOAM" folder then recreates it. See "mapOptimization" for implementation

    # Sensor Settings
    sensor: velodyne                            # lidar sensor type, either 'velodyne' or 'ouster'
    N_SCAN: 32                                  # number of lidar channel (i.e., 16, 32, 64, 128)
    Horizon_SCAN: 1800                          # lidar horizontal resolution (Velodyne:1800, Ouster:512,1024,2048)
    downsampleRate: 1                           # default: 1. Downsample your data if too many points. i.e., 16 = 64 / 4, 16 = 16 / 1
    lidarMinRange: 2.5                          # default: 1.0, minimum lidar range to be used
    lidarMaxRange: 100.0                         # default: 1000.0, maximum lidar range to be used

    # IMU Settings
    imuFrequency: 100
    imuAccNoise: 3.9939570888238808e-03
    imuGyrNoise: 1.5636343949698187e-03
    imuAccBiasN: 6.4356659353532566e-05
    imuGyrBiasN: 3.5640318696367613e-05
    imuGravity: 9.81
    imuRPYWeight: 0.01


    # Extrinsics (lidar -> IMU)

    extrinsicTrans: [0.0, 0.0, -0.246]


    # extrinsicRot: [  0.9945219,  0.1045285,  0.0000000,
    #                 -0.1045285,  0.9945219,  0.0000000,
    #                 0.0000000,  0.0000000,  1.0000000 ]
    # extrinsicRPY: [  0.9945219,  0.1045285,  0.0000000,
    #                 -0.1045285,  0.9945219,  0.0000000,
    #                 0.0000000,  0.0000000,  1.0000000 ]

    # extrinsicRot: [  0.1045285,  0.9945219,  0.0000000,
    #                 0.9945219, -0.1045285 ,  0.0000000,
    #                 0.0000000,  0.0000000,  -1.0000000 ]
    # extrinsicRPY: [  0.1045285,  0.9945219,  0.0000000,
    #                 0.9945219, -0.1045285 ,  0.0000000,
    #                 0.0000000,  0.0000000,  -1.0000000 ]

    # inMotion
    # extrinsicRot: [0.0, 1.0, 0.0,
    #                1.0, 0.0, 0.0,
    #                0.0, 0.0, -1.0]
    # extrinsicRPY: [0.0, 1.0, 0.0,
    #                1.0, 0.0, 0.0,
    #                0.0, 0.0, -1.0]

    # xNAV650
    extrinsicRot: [0.0, -1.0, 0.0,
                  -1.0, 0.0, 0.0,
                   0.0, 0.0, 1.0]
    extrinsicRPY: [0.0, -1.0, 0.0,
                  -1.0, 0.0, 0.0,
                   0.0, 0.0, 1.0]


    # LOAM feature threshold
    edgeThreshold: 1.5
    surfThreshold: 0.05
    edgeFeatureMinValidNum: 100
    surfFeatureMinValidNum: 300

    # voxel filter paprams
    odometrySurfLeafSize: 0.2                     # default: 0.4 - outdoor, 0.2 - indoor
    mappingCornerLeafSize: 0.1                    # default: 0.2 - outdoor, 0.1 - indoor
    mappingSurfLeafSize: 0.2                      # default: 0.4 - outdoor, 0.2 - indoor

    # robot motion constraint (in case you are using a 2D robot)
    z_tollerance: 1000.0                            # meters
    rotation_tollerance: 1000.0                     # radians

    # CPU Params
    numberOfCores: 8                              # number of cores for mapping optimization
    mappingProcessInterval: 0.10                  # seconds, regulate mapping frequency

    # Surrounding map
    surroundingkeyframeAddingDistThreshold: 0.05 #1.0   # meters, regulate keyframe adding threshold
    surroundingkeyframeAddingAngleThreshold: 0.1 #0.2  # radians, regulate keyframe adding threshold
    surroundingKeyframeDensity: 2.0               # meters, downsample surrounding keyframe poses   
    surroundingKeyframeSearchRadius: 35.0         # meters, within n meters scan-to-map optimization (when loop closure disabled)

    # Loop closure
    loopClosureEnableFlag: true
    loopClosureFrequency: 1.0                     # Hz, regulate loop closure constraint add frequency
    surroundingKeyframeSize: 50                   # submap size (when loop closure enabled)
    historyKeyframeSearchRadius: 15.0             # meters, key frame that is within n meters from current pose will be considerd for loop closure
    historyKeyframeSearchTimeDiff: 30.0           # seconds, key frame that is n seconds older will be considered for loop closure
    historyKeyframeSearchNum: 50                  # number of hostory key frames will be fused into a submap for loop closure
    historyKeyframeFitnessScore: 0.1              # icp threshold, the smaller the better alignment

    # Visualization
    globalMapVisualizationSearchRadius: 1000.0    # meters, global map visualization radius
    globalMapVisualizationPoseDensity: 5.0       # meters, global map visualization keyframe density
    globalMapVisualizationLeafSize: 0.4           # meters, global map visualization cloud density

